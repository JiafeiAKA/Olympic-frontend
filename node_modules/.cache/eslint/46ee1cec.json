[{"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/main.ts":"1","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/registerServiceWorker.ts":"2","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/App.vue":"3","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/router/index.ts":"4","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/store/index.ts":"5","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/views/AboutView.vue":"6","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/views/ProfileView.vue":"7","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/views/CountryView.vue":"8","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/components/OylmpicMainPage.vue":"9","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/components/LoginComponent.vue":"10","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/components/SignUpComponent.vue":"11","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/components/CardComponent.vue":"12","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/constants/NationName.ts":"13","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/components/CountryMedal.vue":"14","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/components/CommentListComponent.vue":"15","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/constants/YearList.ts":"16","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/services/AuthenticationService.ts":"17","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/services/OlympicService.ts":"18","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/services/ApiService.ts":"19","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/services/CommentService.ts":"20","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/services/MedalCountryService.ts":"21"},{"size":342,"mtime":1729763412517,"results":"22","hashOfConfig":"23"},{"size":903,"mtime":1729752836304,"results":"24","hashOfConfig":"23"},{"size":660,"mtime":1729763520647,"results":"25","hashOfConfig":"23"},{"size":1172,"mtime":1729931542431,"results":"26","hashOfConfig":"23"},{"size":157,"mtime":1729752836304,"results":"27","hashOfConfig":"23"},{"size":89,"mtime":1729752836304,"results":"28","hashOfConfig":"23"},{"size":130,"mtime":1729926611006,"results":"29","hashOfConfig":"23"},{"size":821,"mtime":1729963784949,"results":"30","hashOfConfig":"23"},{"size":4129,"mtime":1729966751429,"results":"31","hashOfConfig":"23"},{"size":1349,"mtime":1729937325810,"results":"32","hashOfConfig":"23"},{"size":2178,"mtime":1729927214268,"results":"33","hashOfConfig":"23"},{"size":3045,"mtime":1729966773988,"results":"34","hashOfConfig":"23"},{"size":16264,"mtime":1729966774054,"results":"35","hashOfConfig":"23"},{"size":3486,"mtime":1729967251862,"results":"36","hashOfConfig":"23"},{"size":2537,"mtime":1729963347697,"results":"37","hashOfConfig":"23"},{"size":255,"mtime":1729761691642,"results":"38","hashOfConfig":"23"},{"size":1240,"mtime":1729937204471,"results":"39","hashOfConfig":"23"},{"size":605,"mtime":1729926489326,"results":"40","hashOfConfig":"23"},{"size":465,"mtime":1729933940831,"results":"41","hashOfConfig":"23"},{"size":1148,"mtime":1729937506433,"results":"42","hashOfConfig":"23"},{"size":725,"mtime":1729966228286,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xi0sl",{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/main.ts",[],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/registerServiceWorker.ts",[],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/App.vue",[],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/router/index.ts",[],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/store/index.ts",[],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/views/AboutView.vue",[],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/views/ProfileView.vue",[],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/views/CountryView.vue",["91","92","93","94"],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/components/OylmpicMainPage.vue",["95","96","97"],"<template>\n    <div class=\"container mx-auto px-4 py-8\">\n        <!-- Grid for the cards -->\n        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n\n        </div>\n    </div>\n\n    <div class=\"flex justify-end mt-2 mx-10\">\n        <label for=\"pageSizeSpinner\" class=\"mr-2\">Items per Page : </label>\n        <select id=\"pageSizeSpinner\" v-model=\"itemsPerPage\" class=\"border rounded px-4 py-2\" @change=\"fetchItemPerPage\">\n            <option v-for=\"option in itemsPerPageOptions\" :key=\"option\" :value=\"option\">{{ option }}</option>\n        </select>\n    </div>\n\n\n    <div class=\"flex justify-end mt-2 mx-10\">\n        <label for=\"yearSpinner\" class=\"mr-2\">Year: </label>\n        <select id=\"yearSpinner\" v-model=\"selectedYear\" class=\"border rounded px-4 py-2\" @change=\"fetchYear\">\n            <option v-for=\"year in years\" :key=\"year\" :value=\"year\">{{ year }}</option>\n        </select>\n    </div>\n\n\n\n\n    <CardComponent v-for=\"(olympic, index) in paginatedData\" :key=\"olympic.NOC\" :olympicsdetail=\"olympic\"\n        :index=\"index\" />\n\n\n    <div class=\"pagination-container \">\n        <button type=\"button\" @click=\"goToPreviousPage\" :disabled=\"currentPage === 1\"\n            class=\"text-white bg-blue-700 hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 font-medium rounded-full text-sm px-5 py-2.5 text-center me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">\n            Previous</button>\n\n        <span> {{ currentPage }} of {{ totalPages }} </span>\n        <button type=\"button\" @click=\"goToNextPage\" :disabled=\"currentPage === totalPages\"\n            class=\"text-white bg-blue-700 hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 font-medium rounded-full text-sm px-5 py-2.5 text-center me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">\n            Next</button>\n    </div>\n\n</template>\n\n<script setup lang=\"ts\">\nimport OlympicService from '@/services/OlympicService';\nimport { OlympicDetail } from '@/types';\nimport { computed, onMounted, ref, watchEffect } from 'vue';\nimport CardComponent from './CardComponent.vue';\nimport { yearList } from '@/constants/YearList';\nimport { NOC_TO_NAME } from '../constants/NationName';\n\n//TODO\nconst nocNames = NOC_TO_NAME;\n\n// Pagination declare\nconst itemsPerPageOptions = [5, 10, 15, 20];\nconst itemsPerPage = ref(itemsPerPageOptions[1]);\nconst currentPage = ref(1);\n\n// cal page\nconst totalPages = computed(() => {\n    if (!olympicAllCountry.value) return 0;\n    return Math.ceil(olympicAllCountry.value.length / itemsPerPage.value);\n});\n\n\n// cal each page\nconst paginatedData = computed(() => {\n    if (!olympicAllCountry.value) return [];\n    const start = (currentPage.value - 1) * itemsPerPage.value;\n    const end = start + itemsPerPage.value;\n    return olympicAllCountry.value.slice(start, end);\n});\n\n\nconst years: number[] = yearList\n    .sort((a, b) => b - a);\n\nconst selectedYear = ref(yearList[0]);\n\nconst olympicAllCountry = ref<OlympicDetail[] | null>(null);\n\n\n\nasync function fetchYear() {\n\n    currentPage.value = 1;\n\n    fetchData();\n\n}\n\nasync function fetchItemPerPage() {\n\n    currentPage.value = 1;\n\n    fetchData();\n\n}\n\n\nasync function fetchData() {\n\n    try {\n        // const response = await OlympicService.getOlympic(selectedYear.value);\n        const response = await OlympicService.getOlympicWithPagination(selectedYear.value, currentPage.value, itemsPerPage.value);\n\n        olympicAllCountry.value = response.data;\n\n    } catch (error) {\n        console.log('Error fetch data main page ', error);\n    }\n\n    olympicAllCountry.value?.sort((a, b) => {\n        const goldA = a.Total as number; // แปลงค่าเป็น number\n        const goldB = b.Total as number; // แปลงค่าเป็น number\n        return goldB - goldA; // ค่ามากไปน้อย\n    });\n\n\n\n\n}\n\nfunction goToPreviousPage() {\n    currentPage.value--;\n    fetchData();\n}\n\nfunction goToNextPage() {\n    currentPage.value++;\n    fetchData();\n}\n\nfetchData();\n\n\n</script>\n\n<style scoped>\n.pagination-button {\n    margin: 0 10px;\n}\n</style>",[],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/components/LoginComponent.vue",[],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/components/SignUpComponent.vue",[],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/components/CardComponent.vue",["98","99","100"],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/constants/NationName.ts",["101"],"const NOC_REGIONS = {\n  AFG: 'Afghanistan',\n  AHO: 'Curacao',\n  ALB: 'Albania',\n  ALG: 'Algeria',\n  AND: 'Andorra',\n  ANG: 'Angola',\n  ANT: 'Antigua',\n  ANZ: 'Australia',\n  ARG: 'Argentina',\n  ARM: 'Armenia',\n  ARU: 'Aruba',\n  ASA: 'American Samoa',\n  AUS: 'Australia',\n  AUT: 'Austria',\n  AZE: 'Azerbaijan',\n  BAH: 'Bahamas',\n  BAN: 'Bangladesh',\n  BAR: 'Barbados',\n  BDI: 'Burundi',\n  BEL: 'Belgium',\n  BEN: 'Benin',\n  BER: 'Bermuda',\n  BHU: 'Bhutan',\n  BIH: 'Bosnia and Herzegovina',\n  BIZ: 'Belize',\n  BLR: 'Belarus',\n  BOH: 'Czech Republic',\n  BOL: 'Boliva',\n  BOT: 'Botswana',\n  BRA: 'Brazil',\n  BRN: 'Bahrain',\n  BRU: 'Brunei',\n  BUL: 'Bulgaria',\n  BUR: 'Burkina Faso',\n  CAF: 'Central African Republic',\n  CAM: 'Cambodia',\n  CAN: 'Canada',\n  CAY: 'Cayman Islands',\n  CGO: 'Republic of Congo',\n  CHA: 'Chad',\n  CHI: 'Chile',\n  CHN: 'China',\n  CIV: 'Ivory Coast',\n  CMR: 'Cameroon',\n  COD: 'Democratic Republic of the Congo',\n  COK: 'Cook Islands',\n  COL: 'Colombia',\n  COM: 'Comoros',\n  CPV: 'Cape Verde',\n  CRC: 'Costa Rica',\n  CRO: 'Croatia',\n  CRT: 'Greece',\n  CUB: 'Cuba',\n  CYP: 'Cyprus',\n  CZE: 'Czech Republic',\n  DEN: 'Denmark',\n  DJI: 'Djibouti',\n  DMA: 'Dominica',\n  DOM: 'Dominican Republic',\n  ECU: 'Ecuador',\n  EGY: 'Egypt',\n  ERI: 'Eritrea',\n  ESA: 'El Salvador',\n  ESP: 'Spain',\n  EST: 'Estonia',\n  ETH: 'Ethiopia',\n  EUN: 'Russia',\n  FIJ: 'Fiji',\n  FIN: 'Finland',\n  FRA: 'France',\n  FRG: 'Germany',\n  FSM: 'Micronesia',\n  GAB: 'Gabon',\n  GAM: 'Gambia',\n  GBR: 'UK',\n  GBS: 'Guinea-Bissau',\n  GDR: 'Germany',\n  GEO: 'Georgia',\n  GEQ: 'Equatorial Guinea',\n  GER: 'Germany',\n  GHA: 'Ghana',\n  GRE: 'Greece',\n  GRN: 'Grenada',\n  GUA: 'Guatemala',\n  GUI: 'Guinea',\n  GUM: 'Guam',\n  GUY: 'Guyana',\n  HAI: 'Haiti',\n  HKG: 'China',\n  HON: 'Honduras',\n  HUN: 'Hungary',\n  INA: 'Indonesia',\n  IND: 'India',\n  IOA: 'Individual Olympic Athletes',\n  IRI: 'Iran',\n  IRL: 'Ireland',\n  IRQ: 'Iraq',\n  ISL: 'Iceland',\n  ISR: 'Israel',\n  ISV: 'Virgin Islands, US',\n  ITA: 'Italy',\n  IVB: 'Virgin Islands, British',\n  JAM: 'Jamaica',\n  JOR: 'Jordan',\n  JPN: 'Japan',\n  KAZ: 'Kazakhstan',\n  KEN: 'Kenya',\n  KGZ: 'Kyrgyzstan',\n  KIR: 'Kiribati',\n  KOR: 'South Korea',\n  KOS: 'Kosovo',\n  KSA: 'Saudi Arabia',\n  KUW: 'Kuwait',\n  LAO: 'Laos',\n  LAT: 'Latvia',\n  LBA: 'Libya',\n  LBR: 'Liberia',\n  LCA: 'Saint Lucia',\n  LES: 'Lesotho',\n  LIB: 'Lebanon',\n  LIE: 'Liechtenstein',\n  LTU: 'Lithuania',\n  LUX: 'Luxembourg',\n  MAD: 'Madagascar',\n  MAL: 'Malaysia',\n  MAR: 'Morocco',\n  MAS: 'Malaysia',\n  MAW: 'Malawi',\n  MDA: 'Moldova',\n  MDV: 'Maldives',\n  MEX: 'Mexico',\n  MGL: 'Mongolia',\n  MHL: 'Marshall Islands',\n  MKD: 'Macedonia',\n  MLI: 'Mali',\n  MLT: 'Malta',\n  MNE: 'Montenegro',\n  MON: 'Monaco',\n  MOZ: 'Mozambique',\n  MRI: 'Mauritius',\n  MTN: 'Mauritania',\n  MYA: 'Myanmar',\n  NAM: 'Namibia',\n  NBO: 'Malaysia',\n  NCA: 'Nicaragua',\n  NED: 'Netherlands',\n  NEP: 'Nepal',\n  NFL: 'Canada',\n  NGR: 'Nigeria',\n  NIG: 'Niger',\n  NOR: 'Norway',\n  NRU: 'Nauru',\n  NZL: 'New Zealand',\n  OMA: 'Oman',\n  PAK: 'Pakistan',\n  PAN: 'Panama',\n  PAR: 'Paraguay',\n  PER: 'Peru',\n  PHI: 'Philippines',\n  PLE: 'Palestine',\n  PLW: 'Palau',\n  PNG: 'Papua New Guinea',\n  POL: 'Poland',\n  POR: 'Portugal',\n  PRK: 'North Korea',\n  PUR: 'Puerto Rico',\n  QAT: 'Qatar',\n  RHO: 'Zimbabwe',\n  ROT: 'nan',\n  ROU: 'Romania',\n  RSA: 'South Africa',\n  RUS: 'Russia',\n  RWA: 'Rwanda',\n  SAA: 'Germany',\n  SAM: 'Samoa',\n  SCG: 'Serbia',\n  SEN: 'Senegal',\n  SEY: 'Seychelles',\n  SIN: 'Singapore',\n  SKN: 'Saint Kitts',\n  SLE: 'Sierra Leone',\n  SLO: 'Slovenia',\n  SMR: 'San Marino',\n  SOL: 'Solomon Islands',\n  SOM: 'Somalia',\n  SRB: 'Serbia',\n  SRI: 'Sri Lanka',\n  SSD: 'South Sudan',\n  STP: 'Sao Tome and Principe',\n  SUD: 'Sudan',\n  SUI: 'Switzerland',\n  SUR: 'Suriname',\n  SVK: 'Slovakia',\n  SWE: 'Sweden',\n  SWZ: 'Swaziland',\n  SYR: 'Syria',\n  TAN: 'Tanzania',\n  TCH: 'Czech Republic',\n  TGA: 'Tonga',\n  THA: 'Thailand',\n  TJK: 'Tajikistan',\n  TKM: 'Turkmenistan',\n  TLS: 'Timor-Leste',\n  TOG: 'Togo',\n  TPE: 'Taiwan',\n  TTO: 'Trinidad',\n  TUN: 'Tunisia',\n  TUR: 'Turkey',\n  TUV: 'nan',\n  UAE: 'United Arab Emirates',\n  UAR: 'Syria',\n  UGA: 'Uganda',\n  UKR: 'Ukraine',\n  UNK: 'nan',\n  URS: 'Russia',\n  URU: 'Uruguay',\n  USA: 'USA',\n  UZB: 'Uzbekistan',\n  VAN: 'Vanuatu',\n  VEN: 'Venezuela',\n  VIE: 'Vietnam',\n  VIN: 'Saint Vincent',\n  VNM: 'Vietnam',\n  WIF: 'Trinidad',\n  YAR: 'Yemen',\n  YEM: 'Yemen',\n  YMD: 'Yemen',\n  YUG: 'Serbia',\n  ZAM: 'Zambia',\n  ZIM: 'Zimbabwe',\n};\n\nexport const NOC_TO_NAME = new Map([\n  ['AFG', 'Afghanistan'],\n  ['AHO', 'Curacao'],\n  ['ALB', 'Albania'],\n  ['ALG', 'Algeria'],\n  ['AND', 'Andorra'],\n  ['ANG', 'Angola'],\n  ['ANT', 'Antigua'],\n  ['ANZ', 'Australia'],\n  ['ARG', 'Argentina'],\n  ['ARM', 'Armenia'],\n  ['ARU', 'Aruba'],\n  ['ASA', 'American Samoa'],\n  ['AUS', 'Australia'],\n  ['AUT', 'Austria'],\n  ['AZE', 'Azerbaijan'],\n  ['BAH', 'Bahamas'],\n  ['BAN', 'Bangladesh'],\n  ['BAR', 'Barbados'],\n  ['BDI', 'Burundi'],\n  ['BEL', 'Belgium'],\n  ['BEN', 'Benin'],\n  ['BER', 'Bermuda'],\n  ['BHU', 'Bhutan'],\n  ['BIH', 'Bosnia and Herzegovina'],\n  ['BIZ', 'Belize'],\n  ['BLR', 'Belarus'],\n  ['BOH', 'Czech Republic'],\n  ['BOL', 'Boliva'],\n  ['BOT', 'Botswana'],\n  ['BRA', 'Brazil'],\n  ['BRN', 'Bahrain'],\n  ['BRU', 'Brunei'],\n  ['BUL', 'Bulgaria'],\n  ['BUR', 'Burkina Faso'],\n  ['CAF', 'Central African Republic'],\n  ['CAM', 'Cambodia'],\n  ['CAN', 'Canada'],\n  ['CAY', 'Cayman Islands'],\n  ['CGO', 'Republic of Congo'],\n  ['CHA', 'Chad'],\n  ['CHI', 'Chile'],\n  ['CHN', 'China'],\n  ['CIV', 'Ivory Coast'],\n  ['CMR', 'Cameroon'],\n  ['COD', 'Democratic Republic of the Congo'],\n  ['COK', 'Cook Islands'],\n  ['COL', 'Colombia'],\n  ['COM', 'Comoros'],\n  ['CPV', 'Cape Verde'],\n  ['CRC', 'Costa Rica'],\n  ['CRO', 'Croatia'],\n  ['CRT', 'Greece'],\n  ['CUB', 'Cuba'],\n  ['CYP', 'Cyprus'],\n  ['CZE', 'Czech Republic'],\n  ['DEN', 'Denmark'],\n  ['DJI', 'Djibouti'],\n  ['DMA', 'Dominica'],\n  ['DOM', 'Dominican Republic'],\n  ['ECU', 'Ecuador'],\n  ['EGY', 'Egypt'],\n  ['ERI', 'Eritrea'],\n  ['ESA', 'El Salvador'],\n  ['ESP', 'Spain'],\n  ['EST', 'Estonia'],\n  ['ETH', 'Ethiopia'],\n  ['EUN', 'Russia'],\n  ['FIJ', 'Fiji'],\n  ['FIN', 'Finland'],\n  ['FRA', 'France'],\n  ['FRG', 'Germany'],\n  ['FSM', 'Micronesia'],\n  ['GAB', 'Gabon'],\n  ['GAM', 'Gambia'],\n  ['GBR', 'UK'],\n  ['GBS', 'Guinea-Bissau'],\n  ['GDR', 'Germany'],\n  ['GEO', 'Georgia'],\n  ['GEQ', 'Equatorial Guinea'],\n  ['GER', 'Germany'],\n  ['GHA', 'Ghana'],\n  ['GRE', 'Greece'],\n  ['GRN', 'Grenada'],\n  ['GUA', 'Guatemala'],\n  ['GUI', 'Guinea'],\n  ['GUM', 'Guam'],\n  ['GUY', 'Guyana'],\n  ['HAI', 'Haiti'],\n  ['HKG', 'China'],\n  ['HON', 'Honduras'],\n  ['HUN', 'Hungary'],\n  ['INA', 'Indonesia'],\n  ['IND', 'India'],\n  ['IOA', 'Individual Olympic Athletes'],\n  ['IRI', 'Iran'],\n  ['IRL', 'Ireland'],\n  ['IRQ', 'Iraq'],\n  ['ISL', 'Iceland'],\n  ['ISR', 'Israel'],\n  ['ISV', 'Virgin Islands, US'],\n  ['ITA', 'Italy'],\n  ['IVB', 'Virgin Islands, British'],\n  ['JAM', 'Jamaica'],\n  ['JOR', 'Jordan'],\n  ['JPN', 'Japan'],\n  ['KAZ', 'Kazakhstan'],\n  ['KEN', 'Kenya'],\n  ['KGZ', 'Kyrgyzstan'],\n  ['KIR', 'Kiribati'],\n  ['KOR', 'South Korea'],\n  ['KOS', 'Kosovo'],\n  ['KSA', 'Saudi Arabia'],\n  ['KUW', 'Kuwait'],\n  ['LAO', 'Laos'],\n  ['LAT', 'Latvia'],\n  ['LBA', 'Libya'],\n  ['LBR', 'Liberia'],\n  ['LCA', 'Saint Lucia'],\n  ['LES', 'Lesotho'],\n  ['LIB', 'Lebanon'],\n  ['LIE', 'Liechtenstein'],\n  ['LTU', 'Lithuania'],\n  ['LUX', 'Luxembourg'],\n  ['MAD', 'Madagascar'],\n  ['MAL', 'Malaysia'],\n  ['MAR', 'Morocco'],\n  ['MAS', 'Malaysia'],\n  ['MAW', 'Malawi'],\n  ['MDA', 'Moldova'],\n  ['MDV', 'Maldives'],\n  ['MEX', 'Mexico'],\n  ['MGL', 'Mongolia'],\n  ['MHL', 'Marshall Islands'],\n  ['MKD', 'Macedonia'],\n  ['MLI', 'Mali'],\n  ['MLT', 'Malta'],\n  ['MNE', 'Montenegro'],\n  ['MON', 'Monaco'],\n  ['MOZ', 'Mozambique'],\n  ['MRI', 'Mauritius'],\n  ['MTN', 'Mauritania'],\n  ['MYA', 'Myanmar'],\n  ['NAM', 'Namibia'],\n  ['NBO', 'Malaysia'],\n  ['NCA', 'Nicaragua'],\n  ['NED', 'Netherlands'],\n  ['NEP', 'Nepal'],\n  ['NFL', 'Canada'],\n  ['NGR', 'Nigeria'],\n  ['NIG', 'Niger'],\n  ['NOR', 'Norway'],\n  ['NRU', 'Nauru'],\n  ['NZL', 'New Zealand'],\n  ['OMA', 'Oman'],\n  ['PAK', 'Pakistan'],\n  ['PAN', 'Panama'],\n  ['PAR', 'Paraguay'],\n  ['PER', 'Peru'],\n  ['PHI', 'Philippines'],\n  ['PLE', 'Palestine'],\n  ['PLW', 'Palau'],\n  ['PNG', 'Papua New Guinea'],\n  ['POL', 'Poland'],\n  ['POR', 'Portugal'],\n  ['PRK', 'North Korea'],\n  ['PUR', 'Puerto Rico'],\n  ['QAT', 'Qatar'],\n  ['RHO', 'Zimbabwe'],\n  ['ROT', 'nan'],\n  ['ROU', 'Romania'],\n  ['RSA', 'South Africa'],\n  ['RUS', 'Russia'],\n  ['RWA', 'Rwanda'],\n  ['SAA', 'Germany'],\n  ['SAM', 'Samoa'],\n  ['SCG', 'Serbia'],\n  ['SEN', 'Senegal'],\n  ['SEY', 'Seychelles'],\n  ['SIN', 'Singapore'],\n  ['SKN', 'Saint Kitts'],\n  ['SLE', 'Sierra Leone'],\n  ['SLO', 'Slovenia'],\n  ['SMR', 'San Marino'],\n  ['SOL', 'Solomon Islands'],\n  ['SOM', 'Somalia'],\n  ['SRB', 'Serbia'],\n  ['SRI', 'Sri Lanka'],\n  ['SSD', 'South Sudan'],\n  ['STP', 'Sao Tome and Principe'],\n  ['SUD', 'Sudan'],\n  ['SUI', 'Switzerland'],\n  ['SUR', 'Suriname'],\n  ['SVK', 'Slovakia'],\n  ['SWE', 'Sweden'],\n  ['SWZ', 'Swaziland'],\n  ['SYR', 'Syria'],\n  ['TAN', 'Tanzania'],\n  ['TCH', 'Czech Republic'],\n  ['TGA', 'Tonga'],\n  ['THA', 'Thailand'],\n  ['TJK', 'Tajikistan'],\n  ['TKM', 'Turkmenistan'],\n  ['TLS', 'Timor-Leste'],\n  ['TOG', 'Togo'],\n  ['TPE', 'Taiwan'],\n  ['TTO', 'Trinidad'],\n  ['TUN', 'Tunisia'],\n  ['TUR', 'Turkey'],\n  ['TUV', 'nan'],\n  ['UAE', 'United Arab Emirates'],\n  ['UAR', 'Syria'],\n  ['UGA', 'Uganda'],\n  ['UKR', 'Ukraine'],\n  ['UNK', 'nan'],\n  ['URS', 'Russia'],\n  ['URU', 'Uruguay'],\n  ['USA', 'USA'],\n  ['UZB', 'Uzbekistan'],\n  ['VAN', 'Vanuatu'],\n  ['VEN', 'Venezuela'],\n  ['VIE', 'Vietnam'],\n  ['VIN', 'Saint Vincent'],\n  ['VNM', 'Vietnam'],\n  ['WIF', 'Trinidad'],\n  ['YAR', 'Yemen'],\n  ['YEM', 'Yemen'],\n  ['YMD', 'Yemen'],\n  ['YUG', 'Serbia'],\n  ['ZAM', 'Zambia'],\n  ['ZIM', 'Zimbabwe'],\n]);\n\nexport const countryCodes: Map<string, string> = new Map([\n  ['Aruba', 'ABW'],\n  ['Afghanistan', 'AFG'],\n  ['Angola', 'AGO'],\n  ['Anguilla', 'AIA'],\n  ['Åland Islands', 'ALA'],\n  ['Albania', 'ALB'],\n  ['Andorra', 'AND'],\n  ['United Arab Emirates', 'ARE'],\n  ['Argentina', 'ARG'],\n  ['Armenia', 'ARM'],\n  ['American Samoa', 'ASM'],\n  ['Antarctica', 'ATA'],\n  ['French Southern Territories', 'ATF'],\n  ['Antigua and Barbuda', 'ATG'],\n  ['Australia', 'AUS'],\n  ['Austria', 'AUT'],\n  ['Azerbaijan', 'AZE'],\n  ['Burundi', 'BDI'],\n  ['Belgium', 'BEL'],\n  ['Benin', 'BEN'],\n  ['Bonaire, Sint Eustatius and Saba', 'BES'],\n  ['Burkina Faso', 'BFA'],\n  ['Bangladesh', 'BGD'],\n  ['Bulgaria', 'BGR'],\n  ['Bahrain', 'BHR'],\n  ['Bahamas', 'BHS'],\n  ['Bosnia and Herzegovina', 'BIH'],\n  ['Saint Barthélemy', 'BLM'],\n  ['Belarus', 'BLR'],\n  ['Belize', 'BLZ'],\n  ['Bermuda', 'BMU'],\n  ['Bolivia, Plurinational State of', 'BOL'],\n  ['Brazil', 'BRA'],\n  ['Barbados', 'BRB'],\n  ['Brunei Darussalam', 'BRN'],\n  ['Bhutan', 'BTN'],\n  ['Bouvet Island', 'BVT'],\n  ['Botswana', 'BWA'],\n  ['Central African Republic', 'CAF'],\n  ['Canada', 'CAN'],\n  ['Cocos (Keeling) Islands', 'CCK'],\n  ['Switzerland', 'CHE'],\n  ['Chile', 'CHL'],\n  ['China', 'CHN'],\n  ['Ivory Coast', 'CIV'],\n  ['Cameroon', 'CMR'],\n  ['Congo, Democratic Republic of the', 'COD'],\n  ['Congo', 'COG'],\n  ['Cook Islands', 'COK'],\n  ['Colombia', 'COL'],\n  ['Comoros', 'COM'],\n  ['Cabo Verde', 'CPV'],\n  ['Costa Rica', 'CRI'],\n  ['Cuba', 'CUB'],\n  ['Curaçao', 'CUW'],\n  ['Christmas Island', 'CXR'],\n  ['Cayman Islands', 'CYM'],\n  ['Cyprus', 'CYP'],\n  ['Czech Republic', 'CZE'],\n  ['Germany', 'DEU'],\n  ['Djibouti', 'DJI'],\n  ['Dominica', 'DMA'],\n  ['Denmark', 'DNK'],\n  ['Dominican Republic', 'DOM'],\n  ['Algeria', 'DZA'],\n  ['Ecuador', 'ECU'],\n  ['Egypt', 'EGY'],\n  ['Eritrea', 'ERI'],\n  ['Western Sahara', 'ESH'],\n  ['Spain', 'ESP'],\n  ['Estonia', 'EST'],\n  ['Ethiopia', 'ETH'],\n  ['Finland', 'FIN'],\n  ['Fiji', 'FJI'],\n  ['Falkland Islands (Malvinas)', 'FLK'],\n  ['France', 'FRA'],\n  ['Faroe Islands', 'FRO'],\n  ['Micronesia, Federated States of', 'FSM'],\n  ['Gabon', 'GAB'],\n  ['UK', 'GBR'],\n  ['Georgia', 'GEO'],\n  ['Guernsey', 'GGY'],\n  ['Ghana', 'GHA'],\n  ['Gibraltar', 'GIB'],\n  ['Guinea', 'GIN'],\n  ['Guadeloupe', 'GLP'],\n  ['Gambia', 'GMB'],\n  ['Guinea-Bissau', 'GNB'],\n  ['Equatorial Guinea', 'GNQ'],\n  ['Greece', 'GRC'],\n  ['Grenada', 'GRD'],\n  ['Greenland', 'GRL'],\n  ['Guatemala', 'GTM'],\n  ['French Guiana', 'GUF'],\n  ['Guam', 'GUM'],\n  ['Guyana', 'GUY'],\n  ['Hong Kong', 'HKG'],\n  ['Heard Island and McDonald Islands', 'HMD'],\n  ['Honduras', 'HND'],\n  ['Croatia', 'HRV'],\n  ['Haiti', 'HTI'],\n  ['Hungary', 'HUN'],\n  ['Indonesia', 'IDN'],\n  ['Isle of Man', 'IMN'],\n  ['India', 'IND'],\n  ['British Indian Ocean Territory', 'IOT'],\n  ['Ireland', 'IRL'],\n  ['Iran', 'IRN'],\n  ['Iraq', 'IRQ'],\n  ['Iceland', 'ISL'],\n  ['Israel', 'ISR'],\n  ['Italy', 'ITA'],\n  ['Jamaica', 'JAM'],\n  ['Jersey', 'JEY'],\n  ['Jordan', 'JOR'],\n  ['Japan', 'JPN'],\n  ['Kazakhstan', 'KAZ'],\n  ['Kenya', 'KEN'],\n  ['Kyrgyzstan', 'KGZ'],\n  ['Cambodia', 'KHM'],\n  ['Kiribati', 'KIR'],\n  ['Saint Kitts and Nevis', 'KNA'],\n  ['South Korea', 'KOR'],\n  ['Kuwait', 'KWT'],\n  [\"Lao People's Democratic Republic\", 'LAO'],\n  ['Lebanon', 'LBN'],\n  ['Liberia', 'LBR'],\n  ['Libya', 'LBY'],\n  ['Saint Lucia', 'LCA'],\n  ['Liechtenstein', 'LIE'],\n  ['Sri Lanka', 'LKA'],\n  ['Lesotho', 'LSO'],\n  ['Lithuania', 'LTU'],\n  ['Luxembourg', 'LUX'],\n  ['Latvia', 'LVA'],\n  ['Macao', 'MAC'],\n  ['Saint Martin (French part)', 'MAF'],\n  ['Morocco', 'MAR'],\n  ['Monaco', 'MCO'],\n  ['Moldova, Republic of', 'MDA'],\n  ['Madagascar', 'MDG'],\n  ['Maldives', 'MDV'],\n  ['Mexico', 'MEX'],\n  ['Marshall Islands', 'MHL'],\n  ['North Macedonia', 'MKD'],\n  ['Mali', 'MLI'],\n  ['Malta', 'MLT'],\n  ['Myanmar', 'MMR'],\n  ['Montenegro', 'MNE'],\n  ['Mongolia', 'MNG'],\n  ['Northern Mariana Islands', 'MNP'],\n  ['Mozambique', 'MOZ'],\n  ['Mauritania', 'MRT'],\n  ['Montserrat', 'MSR'],\n  ['Martinique', 'MTQ'],\n  ['Mauritius', 'MUS'],\n  ['Malawi', 'MWI'],\n  ['Malaysia', 'MYS'],\n  ['Mayotte', 'MYT'],\n  ['Namibia', 'NAM'],\n  ['New Caledonia', 'NCL'],\n  ['Niger', 'NER'],\n  ['Norfolk Island', 'NFK'],\n  ['Nigeria', 'NGA'],\n  ['Nicaragua', 'NIC'],\n  ['Niue', 'NIU'],\n  ['Netherlands', 'NLD'],\n  ['Norway', 'NOR'],\n  ['Nepal', 'NPL'],\n  ['Nauru', 'NRU'],\n  ['New Zealand', 'NZL'],\n  ['Oman', 'OMN'],\n  ['Pakistan', 'PAK'],\n  ['Panama', 'PAN'],\n  ['Pitcairn', 'PCN'],\n  ['Peru', 'PER'],\n  ['Philippines', 'PHL'],\n  ['Palau', 'PLW'],\n  ['Papua New Guinea', 'PNG'],\n  ['Poland', 'POL'],\n  ['Puerto Rico', 'PRI'],\n  ['North Korea', 'PRK'],\n  ['Portugal', 'PRT'],\n  ['Paraguay', 'PRY'],\n  ['Palestine, State of', 'PSE'],\n  ['French Polynesia', 'PYF'],\n  ['Qatar', 'QAT'],\n  ['Réunion', 'REU'],\n  ['Romania', 'ROU'],\n  ['Russia', 'RUS'],\n  ['Rwanda', 'RWA'],\n  ['Saudi Arabia', 'SAU'],\n  ['Sudan', 'SDN'],\n  ['Senegal', 'SEN'],\n  ['Singapore', 'SGP'],\n  ['South Georgia and the South Sandwich Islands', 'SGS'],\n  ['Saint Helena, Ascension and Tristan da Cunha', 'SHN'],\n  ['Svalbard and Jan Mayen', 'SJM'],\n  ['Solomon Islands', 'SLB'],\n  ['Sierra Leone', 'SLE'],\n  ['El Salvador', 'SLV'],\n  ['San Marino', 'SMR'],\n  ['Somalia', 'SOM'],\n  ['Saint Pierre and Miquelon', 'SPM'],\n  ['Serbia', 'SRB'],\n  ['South Sudan', 'SSD'],\n  ['Sao Tome and Principe', 'STP'],\n  ['Suriname', 'SUR'],\n  ['Slovakia', 'SVK'],\n  ['Slovenia', 'SVN'],\n  ['Sweden', 'SWE'],\n  ['Eswatini', 'SWZ'],\n  ['Sint Maarten (Dutch part)', 'SXM'],\n  ['Seychelles', 'SYC'],\n  ['Syrian Arab Republic', 'SYR'],\n  ['Turks and Caicos Islands', 'TCA'],\n  ['Chad', 'TCD'],\n  ['Togo', 'TGO'],\n  ['Thailand', 'THA'],\n  ['Tajikistan', 'TJK'],\n  ['Tokelau', 'TKL'],\n  ['Turkmenistan', 'TKM'],\n  ['Timor-Leste', 'TLS'],\n  ['Tonga', 'TON'],\n  ['Trinidad', 'TTO'],\n  ['Tunisia', 'TUN'],\n  ['Turkey', 'TUR'],\n  ['Tuvalu', 'TUV'],\n  ['Taiwan', 'TWN'],\n  ['Tanzania, United Republic of', 'TZA'],\n  ['Uganda', 'UGA'],\n  ['Ukraine', 'UKR'],\n  ['United States Minor Outlying Islands', 'UMI'],\n  ['Uruguay', 'URY'],\n  ['USA', 'USA'],\n  ['Uzbekistan', 'UZB'],\n  ['Holy See', 'VAT'],\n  ['Saint Vincent and the Grenadines', 'VCT'],\n  ['Venezuela', 'VEN'],\n  ['Virgin Islands (British)', 'VGB'],\n  ['Virgin Islands (U.S.)', 'VIR'],\n  ['Vietnam', 'VNM'],\n  ['Vanuatu', 'VUT'],\n  ['Wallis and Futuna', 'WLF'],\n  ['Samoa', 'WSM'],\n  ['Yemen', 'YEM'],\n  ['South Africa', 'ZAF'],\n  ['Zambia', 'ZMB'],\n  ['Zimbabwe', 'ZWE'],\n]);\n",[],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/components/CountryMedal.vue",[],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/components/CommentListComponent.vue",["102","103","104"],"<template>\n\n    <div>\n        <ul class=\"comment-list bg-gray-100 p-4\">\n            <li v-for=\"comment in comments\" :key=\"comment.commentId\" class=\"bg-white p-4 rounded-lg shadow mb-4\">\n                <div class=\"flex justify-between items-center\">\n                    <div class=\"text-gray-800 font-semibold\">{{ comment.username }}</div>\n                    <div class=\"text-gray-600\">{{ comment.commentText }}</div>\n                </div>\n            </li>\n        </ul>\n        <textarea v-model=\"newComment\" placeholder=\"เขียนความคิดเห็นที่นี่...\" rows=\"4\" class=\"w-full mt-4\"></textarea>\n\n        <button @click=\"submitComment\" class=\"mt-2 bg-blue-500 text-white rounded px-4 py-2 float-right\">\n            ส่งความคิดเห็น\n        </button>\n    </div>\n\n</template>\n\n<script setup lang=\"ts\">\nimport { apiClient } from '@/services/ApiService';\nimport { loginRespone, userIdKey, usernameKey } from '@/services/AuthenticationService';\nimport { CommentResponse, getCommentByCountryCode, postComment } from '@/services/CommentService';\nimport { OlympicDetail } from '@/types';\nimport { onMounted, ref, defineProps } from 'vue';\n\n\nconst newComment = ref<string>(''); // State to hold the new comment\n\nconst comments = ref<CommentResponse[]>([]);\n\nconst props = defineProps<{\n    noc: string\n}>();\n\n\n\nconst fetchComments = async () => {\n    try {\n        const response = await getCommentByCountryCode(props.noc);\n        comments.value = response;\n    } catch (error) {\n        console.error('Error fetching comments:', error);\n    }\n};\n\nconst submitComment = async () => {\n    if (newComment.value.trim() === '') return; // Avoid submitting empty comments\n    try {\n\n        const now = new Date();\n        const createdAt = now.toISOString().slice(0, 19);\n        /**\n         *\n         *  comment: string,\n  countryCode: string,\n  createdAt: string,\n  userId: number,\n  username: string\n         *   */\n\n\n        const userId = parseInt(localStorage.getItem(userIdKey) ?? '0', 10);\n        const username = localStorage.getItem(usernameKey)\n        //TODO Country Id\n        await postComment(newComment.value, props.noc, createdAt, userId ?? 0, username ?? 'Unkown');\n        newComment.value = ''; // Clear textarea after submitting\n        await fetchComments(); // Refresh the comment list\n    } catch (error) {\n        console.error('Error submitting comment:', error);\n    }\n};\n\n\nonMounted(() => {\n    fetchComments();\n});\n\n</script>\n\n<style scoped></style>","/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/constants/YearList.ts",[],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/services/AuthenticationService.ts",["105"],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/services/OlympicService.ts",["106"],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/services/ApiService.ts",[],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/services/CommentService.ts",[],"/Users/jusuchon/Desktop/FreshJava/repo/Olympic-frontend/src/services/MedalCountryService.ts",[],{"ruleId":"107","severity":1,"message":"108","line":19,"column":10,"nodeType":"109","messageId":"110","endLine":19,"endColumn":23},{"ruleId":"107","severity":1,"message":"111","line":20,"column":10,"nodeType":"109","messageId":"110","endLine":20,"endColumn":18},{"ruleId":"107","severity":1,"message":"112","line":20,"column":20,"nodeType":"109","messageId":"110","endLine":20,"endColumn":31},{"ruleId":"107","severity":1,"message":"113","line":20,"column":33,"nodeType":"109","messageId":"110","endLine":20,"endColumn":36},{"ruleId":"107","severity":1,"message":"114","line":47,"column":20,"nodeType":"109","messageId":"110","endLine":47,"endColumn":29},{"ruleId":"107","severity":1,"message":"115","line":47,"column":36,"nodeType":"109","messageId":"110","endLine":47,"endColumn":47},{"ruleId":"107","severity":1,"message":"116","line":53,"column":7,"nodeType":"109","messageId":"110","endLine":53,"endColumn":15},{"ruleId":"107","severity":1,"message":"117","line":48,"column":10,"nodeType":"109","messageId":"110","endLine":48,"endColumn":28},{"ruleId":"107","severity":1,"message":"111","line":49,"column":10,"nodeType":"109","messageId":"110","endLine":49,"endColumn":18},{"ruleId":"107","severity":1,"message":"118","line":52,"column":10,"nodeType":"109","messageId":"110","endLine":52,"endColumn":15},{"ruleId":"107","severity":1,"message":"119","line":1,"column":7,"nodeType":"109","messageId":"110","endLine":1,"endColumn":18},{"ruleId":"107","severity":1,"message":"120","line":22,"column":10,"nodeType":"109","messageId":"110","endLine":22,"endColumn":19},{"ruleId":"107","severity":1,"message":"121","line":23,"column":10,"nodeType":"109","messageId":"110","endLine":23,"endColumn":22},{"ruleId":"107","severity":1,"message":"108","line":25,"column":10,"nodeType":"109","messageId":"110","endLine":25,"endColumn":23},{"ruleId":"107","severity":1,"message":"122","line":1,"column":8,"nodeType":"109","messageId":"110","endLine":1,"endColumn":13},{"ruleId":"107","severity":1,"message":"122","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":13},"@typescript-eslint/no-unused-vars","'OlympicDetail' is defined but never used.","Identifier","unusedVar","'computed' is defined but never used.","'defineProps' is defined but never used.","'ref' is defined but never used.","'onMounted' is defined but never used.","'watchEffect' is defined but never used.","'nocNames' is assigned a value but never used.","'CountrySportDetail' is defined but never used.","'query' is defined but never used.","'NOC_REGIONS' is assigned a value but never used.","'apiClient' is defined but never used.","'loginRespone' is defined but never used.","'axios' is defined but never used."]